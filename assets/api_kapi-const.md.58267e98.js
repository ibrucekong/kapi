import { _ as _export_sfc, o as openBlock, c as createElementBlock, a as createStaticVNode } from "./chunks/framework.4fa5a9ca.js";
const __pageData = JSON.parse('{"title":"全局：常量","description":"","frontmatter":{},"headers":[{"level":2,"title":"EVENT","slug":"event","link":"#event","children":[{"level":3,"title":"FPS","slug":"fps","link":"#fps","children":[]},{"level":3,"title":"DRAW.CREATE_POINT","slug":"draw-create-point","link":"#draw-create-point","children":[]},{"level":3,"title":"DRAW.DESTROY_POINT","slug":"draw-destroy-point","link":"#draw-destroy-point","children":[]},{"level":3,"title":"DRAW.LIGHT_FLOW","slug":"draw-light-flow","link":"#draw-light-flow","children":[]},{"level":3,"title":"DRAW.GET_POINT","slug":"draw-get-point","link":"#draw-get-point","children":[]},{"level":3,"title":"MARKER.CLICK","slug":"marker-click","link":"#marker-click","children":[]},{"level":3,"title":"ROUTE.START","slug":"route-start","link":"#route-start","children":[]},{"level":3,"title":"ROUTE.MOVING","slug":"route-moving","link":"#route-moving","children":[]},{"level":3,"title":"ROUTE.END","slug":"route-end","link":"#route-end","children":[]}]},{"level":2,"title":"MEASURE","slug":"measure","link":"#measure","children":[{"level":3,"title":"MEASURE.AREA_2D","slug":"measure-area-2d","link":"#measure-area-2d","children":[]},{"level":3,"title":"MEASURE.AREA_3D","slug":"measure-area-3d","link":"#measure-area-3d","children":[]},{"level":3,"title":"MEASURE.LENGTH_2D","slug":"measure-length-2d","link":"#measure-length-2d","children":[]},{"level":3,"title":"MEASURE.LENGTH_3D","slug":"measure-length-3d","link":"#measure-length-3d","children":[]},{"level":3,"title":"MEASURE.HEIGHT","slug":"measure-height","link":"#measure-height","children":[]}]},{"level":2,"title":"POINT_TYPE","slug":"point-type","link":"#point-type","children":[{"level":3,"title":"POINT_TYPE.FIRE_01","slug":"point-type-fire-01","link":"#point-type-fire-01","children":[]},{"level":3,"title":"POINT_TYPE.FIRE_02","slug":"point-type-fire-02","link":"#point-type-fire-02","children":[]},{"level":3,"title":"POINT_TYPE.FIRE_03","slug":"point-type-fire-03","link":"#point-type-fire-03","children":[]},{"level":3,"title":"POINT_TYPE.TREE_01","slug":"point-type-tree-01","link":"#point-type-tree-01","children":[]},{"level":3,"title":"POINT_TYPE.TREE_02","slug":"point-type-tree-02","link":"#point-type-tree-02","children":[]},{"level":3,"title":"POINT_TYPE.TREE_03","slug":"point-type-tree-03","link":"#point-type-tree-03","children":[]},{"level":3,"title":"POINT_TYPE.DECAL_01","slug":"point-type-decal-01","link":"#point-type-decal-01","children":[]},{"level":3,"title":"POINT_TYPE.DECAL_02","slug":"point-type-decal-02","link":"#point-type-decal-02","children":[]},{"level":3,"title":"POINT_TYPE.DECAL_03","slug":"point-type-decal-03","link":"#point-type-decal-03","children":[]},{"level":3,"title":"POINT_TYPE.FBX","slug":"point-type-fbx","link":"#point-type-fbx","children":[]}]},{"level":2,"title":"WEATHER","slug":"weather","link":"#weather","children":[{"level":3,"title":"WEATHER.CLEAR_SKIES","slug":"weather-clear-skies","link":"#weather-clear-skies","children":[]},{"level":3,"title":"WEATHER.PARTLY_CLOUDY","slug":"weather-partly-cloudy","link":"#weather-partly-cloudy","children":[]},{"level":3,"title":"WEATHER.CLOUDY","slug":"weather-cloudy","link":"#weather-cloudy","children":[]},{"level":3,"title":"WEATHER.OVERCAST","slug":"weather-overcast","link":"#weather-overcast","children":[]},{"level":3,"title":"WEATHER.FOGGY","slug":"weather-foggy","link":"#weather-foggy","children":[]},{"level":3,"title":"WEATHER.LIGHT_RAIN","slug":"weather-light-rain","link":"#weather-light-rain","children":[]},{"level":3,"title":"WEATHER.RAIN","slug":"weather-rain","link":"#weather-rain","children":[]},{"level":3,"title":"WEATHER.THUNDERSTORM","slug":"weather-thunderstorm","link":"#weather-thunderstorm","children":[]},{"level":3,"title":"WEATHER.SAND_DUST","slug":"weather-sand-dust","link":"#weather-sand-dust","children":[]},{"level":3,"title":"WEATHER.SANDSTORM","slug":"weather-sandstorm","link":"#weather-sandstorm","children":[]},{"level":3,"title":"WEATHER.LIGHT_SNOW","slug":"weather-light-snow","link":"#weather-light-snow","children":[]},{"level":3,"title":"WEATHER.SNOW","slug":"weather-snow","link":"#weather-snow","children":[]},{"level":3,"title":"WEATHER.BLIZZARD","slug":"weather-blizzard","link":"#weather-blizzard","children":[]}]}],"relativePath":"api/kapi-const.md","filePath":"api/kapi-const.md"}');
const _sfc_main = { name: "api/kapi-const.md" };
const _hoisted_1 = /* @__PURE__ */ createStaticVNode('<h1 id="全局-常量" tabindex="-1">全局：常量 <a class="header-anchor" href="#全局-常量" aria-label="Permalink to &quot;全局：常量&quot;">​</a></h1><p>对于常用的全局变量，在引入组件后就会获得<code>KAPI_CONST</code>全局变量。</p><h2 id="event" tabindex="-1">EVENT <a class="header-anchor" href="#event" aria-label="Permalink to &quot;EVENT&quot;">​</a></h2><p>事件监听类型如下表</p><table><thead><tr><th>变量</th><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>FPS</td><td>KAPI_CONST.FPS</td><td>帧率</td></tr><tr><td>DRAW.CREATE_POINT</td><td>KAPI_CONST.EVENT.DRAW.CREATE_POINT</td><td>绘制点</td></tr><tr><td>DRAW.DESTROY_POINT</td><td>KAPI_CONST.EVENT.DRAW.DESTROY_POINT</td><td>销毁点</td></tr><tr><td>DRAW.LIGHT_FLOW</td><td>KAPI_CONST.EVENT.DRAW.LIGHT_FLOW</td><td>绘制光流线</td></tr><tr><td>DRAW.GET_POINT</td><td>KAPI_CONST.EVENT.DRAW.GET_POINT</td><td>获取点</td></tr><tr><td>MARKER.CLICK</td><td>KAPI_CONST.EVENT.MARKER.CLICK</td><td>标注点的点击</td></tr><tr><td>ROUTE.START</td><td>KAPI_CONST.EVENT.ROUTE.START</td><td>开始漫游</td></tr><tr><td>ROUTE.MOVING</td><td>KAPI_CONST.EVENT.ROUTE.MOVING</td><td>漫游中</td></tr><tr><td>ROUTE.END</td><td>KAPI_CONST.EVENT.ROUTE.END</td><td>结束漫游</td></tr></tbody></table><h3 id="fps" tabindex="-1">FPS <a class="header-anchor" href="#fps" aria-label="Permalink to &quot;FPS&quot;">​</a></h3><p><code>FPS</code> 是用来设置帧数监听时的全局常量，可以通过 <code>KAPI_CONST.EVENT.FPS</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>在遇到系统卡顿，需要调试系统的时候，可以查看服务的帧数，在自定义监听里面使用该参数可以获取场景的帧数。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FPS)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FPS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">fps</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的帧数：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">fps</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><blockquote><p>确保在场景已经正常加载再使用<code>FPS</code>监听，其他监听方法也是如此。</p></blockquote><h3 id="draw-create-point" tabindex="-1">DRAW.CREATE_POINT <a class="header-anchor" href="#draw-create-point" aria-label="Permalink to &quot;DRAW.CREATE_POINT&quot;">​</a></h3><p><code>DRAW.CREATE_POINT</code> 是创建点时的全局常量，可以通过 <code>KAPI_CONST.EVENT.DRAW.CREATE_POINT</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CREATE_POINT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="draw-destroy-point" tabindex="-1">DRAW.DESTROY_POINT <a class="header-anchor" href="#draw-destroy-point" aria-label="Permalink to &quot;DRAW.DESTROY_POINT&quot;">​</a></h3><p><code>DRAW.DESTROY_POINT</code> 是销毁点时的全局常量，可以通过 <code>KAPI_CONST.EVENT.DRAW.DESTROY_POINT</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DESTROY_POINT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="draw-light-flow" tabindex="-1">DRAW.LIGHT_FLOW <a class="header-anchor" href="#draw-light-flow" aria-label="Permalink to &quot;DRAW.LIGHT_FLOW&quot;">​</a></h3><p><code>DRAW.LIGHT_FLOW</code> 是设置光流的生成监听的常量，可以通过 <code>KAPI_CONST.EVENT.DRAW.LIGHT_FLOW</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>设置光流的生成监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LIGHT_FLOW)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LIGHT_FLOW</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="draw-get-point" tabindex="-1">DRAW.GET_POINT <a class="header-anchor" href="#draw-get-point" aria-label="Permalink to &quot;DRAW.GET_POINT&quot;">​</a></h3><p><code>DRAW.GET_POINT</code> 是获取点的常量，可以通过 <code>KAPI_CONST.EVENT.DRAW.GET_POINT</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>获取点的监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GET_POINT)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DRAW</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">GET_POINT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="marker-click" tabindex="-1">MARKER.CLICK <a class="header-anchor" href="#marker-click" aria-label="Permalink to &quot;MARKER.CLICK&quot;">​</a></h3><p><code>MARKER.CLICK</code> 是marker点击事件监听的常量，可以通过 <code>KAPI_CONST.EVENT.MARKER.CLICK</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>marker点击事件监听的监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MARKER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLICK)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MARKER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLICK</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="route-start" tabindex="-1">ROUTE.START <a class="header-anchor" href="#route-start" aria-label="Permalink to &quot;ROUTE.START&quot;">​</a></h3><p><code>ROUTE.START</code> 是开始漫游的常量，可以通过 <code>KAPI_CONST.EVENT.ROUTE.START</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>开始漫游的监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">START)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">START</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="route-moving" tabindex="-1">ROUTE.MOVING <a class="header-anchor" href="#route-moving" aria-label="Permalink to &quot;ROUTE.MOVING&quot;">​</a></h3><p><code>ROUTE.MOVING</code> 是漫游中的常量，可以通过 <code>KAPI_CONST.EVENT.ROUTE.MOVING</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>漫游中的监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MOVING)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MOVING</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="route-end" tabindex="-1">ROUTE.END <a class="header-anchor" href="#route-end" aria-label="Permalink to &quot;ROUTE.END&quot;">​</a></h3><p><code>ROUTE.END</code> 是结束漫游的常量，可以通过 <code>KAPI_CONST.EVENT.ROUTE.END</code> 获取。</p><ul><li><p><strong>类型:</strong> <code>[eventName: string]: any</code></p></li><li><p><strong>详情:</strong></p><p>结束漫游的监听。</p></li><li><p><strong>示例:</strong></p></li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> KAPI </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">@ibrucekong/kapi</span><span style="color:#89DDFF;">&#39;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 查看当前的常量值</span></span>\n<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">END)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">// 设置事件监听</span></span>\n<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">EVENT</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ROUTE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">END</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">当前的结果：</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="measure" tabindex="-1">MEASURE <a class="header-anchor" href="#measure" aria-label="Permalink to &quot;MEASURE&quot;">​</a></h2><p>测量模块包括对二维面积、三维面积、二维长度、三维长度和高度的测量方法。</p><p>测量类型如下表</p><table><thead><tr><th>变量</th><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>AREA_2D</td><td>KAPI_CONST.MEASURE.AREA_2D</td><td>测量二维面积</td></tr><tr><td>AREA_3D</td><td>KAPI_CONST.MEASURE.AREA_3D</td><td>测量三维面积</td></tr><tr><td>LENGTH_2D</td><td>KAPI_CONST.MEASURE.LENGTH_2D</td><td>测量二维长度</td></tr><tr><td>LENGTH_3D</td><td>KAPI_CONST.MEASURE.LENGTH_3D</td><td>测量三维长度</td></tr><tr><td>HEIGHT</td><td>KAPI_CONST.MEASURE.HEIGHT</td><td>测量高度</td></tr></tbody></table><h3 id="measure-area-2d" tabindex="-1">MEASURE.AREA_2D <a class="header-anchor" href="#measure-area-2d" aria-label="Permalink to &quot;MEASURE.AREA_2D&quot;">​</a></h3><p><code>MEASURE.AREA_2D</code> 是使用二维面积测量时的全局常量，可以通过 <code>KAPI_CONST.MEASURE.AREA_2D</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MEASURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AREA_2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="measure-area-3d" tabindex="-1">MEASURE.AREA_3D <a class="header-anchor" href="#measure-area-3d" aria-label="Permalink to &quot;MEASURE.AREA_3D&quot;">​</a></h3><p><code>MEASURE.AREA_3D</code> 是使用三维面积测量时的全局常量，可以通过 <code>KAPI_CONST.MEASURE.AREA_3D</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MEASURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">AREA_3D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="measure-length-2d" tabindex="-1">MEASURE.LENGTH_2D <a class="header-anchor" href="#measure-length-2d" aria-label="Permalink to &quot;MEASURE.LENGTH_2D&quot;">​</a></h3><p><code>MEASURE.LENGTH_2D</code> 是使用二维长度测量时的全局常量，可以通过 <code>KAPI_CONST.MEASURE.LENGTH_2D</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MEASURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LENGTH_2D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="measure-length-3d" tabindex="-1">MEASURE.LENGTH_3D <a class="header-anchor" href="#measure-length-3d" aria-label="Permalink to &quot;MEASURE.LENGTH_3D&quot;">​</a></h3><p><code>MEASURE.LENGTH_3D</code> 是使用三维长度测量时的全局常量，可以通过 <code>KAPI_CONST.MEASURE.LENGTH_3D</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MEASURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LENGTH_3D</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h3 id="measure-height" tabindex="-1">MEASURE.HEIGHT <a class="header-anchor" href="#measure-height" aria-label="Permalink to &quot;MEASURE.HEIGHT&quot;">​</a></h3><p><code>MEASURE.HEIGHT</code> 是使用高度测量时的全局常量，可以通过 <code>KAPI_CONST.MEASURE.HEIGHT</code> 获取。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> event </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> kapi</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Event</span><span style="color:#A6ACCD;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">MEASURE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">HEIGHT</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">response</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">response</span><span style="color:#F07178;">)</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="point-type" tabindex="-1">POINT_TYPE <a class="header-anchor" href="#point-type" aria-label="Permalink to &quot;POINT_TYPE&quot;">​</a></h2><p>点类型包括对三种火焰特效、三种树种、三种贴画以及自定义的FBX模型效果。</p><p>点类型如下表</p><table><thead><tr><th>变量</th><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>FIRE_01</td><td>KAPI_CONST.POINT_TYPE.FIRE_01</td><td>火焰1</td></tr><tr><td>FIRE_02</td><td>KAPI_CONST.POINT_TYPE.FIRE_02</td><td>火焰2</td></tr><tr><td>FIRE_03</td><td>KAPI_CONST.POINT_TYPE.FIRE_03</td><td>火焰3</td></tr><tr><td>TREE_01</td><td>KAPI_CONST.POINT_TYPE.TREE_01</td><td>树种1</td></tr><tr><td>TREE_02</td><td>KAPI_CONST.POINT_TYPE.TREE_02</td><td>树种2</td></tr><tr><td>TREE_03</td><td>KAPI_CONST.POINT_TYPE.TREE_03</td><td>树种3</td></tr><tr><td>DECAL_01</td><td>KAPI_CONST.POINT_TYPE.DECAL_01</td><td>贴花1</td></tr><tr><td>DECAL_02</td><td>KAPI_CONST.POINT_TYPE.DECAL_02</td><td>贴花2</td></tr><tr><td>DECAL_03</td><td>KAPI_CONST.POINT_TYPE.DECAL_03</td><td>贴花3</td></tr><tr><td>DECAL_03</td><td>KAPI_CONST.POINT_TYPE.DECAL_03</td><td>贴花3</td></tr><tr><td>FBX</td><td>KAPI_CONST.POINT_TYPE.FBX</td><td>FBX模型</td></tr></tbody></table><h3 id="point-type-fire-01" tabindex="-1">POINT_TYPE.FIRE_01 <a class="header-anchor" href="#point-type-fire-01" aria-label="Permalink to &quot;POINT_TYPE.FIRE_01&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FIRE_01)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-fire-02" tabindex="-1">POINT_TYPE.FIRE_02 <a class="header-anchor" href="#point-type-fire-02" aria-label="Permalink to &quot;POINT_TYPE.FIRE_02&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FIRE_02)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-fire-03" tabindex="-1">POINT_TYPE.FIRE_03 <a class="header-anchor" href="#point-type-fire-03" aria-label="Permalink to &quot;POINT_TYPE.FIRE_03&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FIRE_03)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-tree-01" tabindex="-1">POINT_TYPE.TREE_01 <a class="header-anchor" href="#point-type-tree-01" aria-label="Permalink to &quot;POINT_TYPE.TREE_01&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TREE_01)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-tree-02" tabindex="-1">POINT_TYPE.TREE_02 <a class="header-anchor" href="#point-type-tree-02" aria-label="Permalink to &quot;POINT_TYPE.TREE_02&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TREE_02)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-tree-03" tabindex="-1">POINT_TYPE.TREE_03 <a class="header-anchor" href="#point-type-tree-03" aria-label="Permalink to &quot;POINT_TYPE.TREE_03&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">TREE_03)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-decal-01" tabindex="-1">POINT_TYPE.DECAL_01 <a class="header-anchor" href="#point-type-decal-01" aria-label="Permalink to &quot;POINT_TYPE.DECAL_01&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DECAL_01)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-decal-02" tabindex="-1">POINT_TYPE.DECAL_02 <a class="header-anchor" href="#point-type-decal-02" aria-label="Permalink to &quot;POINT_TYPE.DECAL_02&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DECAL_02)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-decal-03" tabindex="-1">POINT_TYPE.DECAL_03 <a class="header-anchor" href="#point-type-decal-03" aria-label="Permalink to &quot;POINT_TYPE.DECAL_03&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">DECAL_03)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h3 id="point-type-fbx" tabindex="-1">POINT_TYPE.FBX <a class="header-anchor" href="#point-type-fbx" aria-label="Permalink to &quot;POINT_TYPE.FBX&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> pointInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> draw</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">drawPoint</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">POINT_TYPE</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FBX)</span></span></code></pre></div><blockquote><p>要配合 <code>draw.closeDrawPoint()</code> 方法关闭绘制点功能。</p></blockquote><h2 id="weather" tabindex="-1">WEATHER <a class="header-anchor" href="#weather" aria-label="Permalink to &quot;WEATHER&quot;">​</a></h2><p>天气包括对晴天、少云、多云、阴天、雾天、小雨、大雨、暴风雨、浮尘、沙尘暴、小雪、大雪和暴风雪的天气特效。</p><p>天气类型如下表</p><table><thead><tr><th>变量</th><th>使用</th><th>说明</th></tr></thead><tbody><tr><td>CLEAR_SKIES</td><td>KAPI_CONST.WEATHER.CLEAR_SKIES</td><td>晴天</td></tr><tr><td>PARTLY_CLOUDY</td><td>KAPI_CONST.WEATHER.PARTLY_CLOUDY</td><td>少云</td></tr><tr><td>CLOUDY</td><td>KAPI_CONST.WEATHER.CLOUDY</td><td>多云</td></tr><tr><td>OVERCAST</td><td>KAPI_CONST.WEATHER.OVERCAST</td><td>阴天</td></tr><tr><td>FOGGY</td><td>KAPI_CONST.WEATHER.FOGGY</td><td>雾天</td></tr><tr><td>LIGHT_RAIN</td><td>KAPI_CONST.WEATHER.LIGHT_RAIN</td><td>小雨</td></tr><tr><td>RAIN</td><td>KAPI_CONST.WEATHER.RAIN</td><td>大雨</td></tr><tr><td>THUNDERSTORM</td><td>KAPI_CONST.WEATHER.THUNDERSTORM</td><td>暴风雨</td></tr><tr><td>SAND_DUST</td><td>KAPI_CONST.WEATHER.SAND_DUST</td><td>浮尘</td></tr><tr><td>SANDSTORM</td><td>KAPI_CONST.WEATHER.SANDSTORM</td><td>沙尘暴</td></tr><tr><td>LIGHT_SNOW</td><td>KAPI_CONST.WEATHER.LIGHT_SNOW</td><td>小雪</td></tr><tr><td>SNOW</td><td>KAPI_CONST.WEATHER.SNOW</td><td>大雪</td></tr><tr><td>BLIZZARD</td><td>KAPI_CONST.WEATHER.BLIZZARD</td><td>暴风雪</td></tr></tbody></table><h3 id="weather-clear-skies" tabindex="-1">WEATHER.CLEAR_SKIES <a class="header-anchor" href="#weather-clear-skies" aria-label="Permalink to &quot;WEATHER.CLEAR_SKIES&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLEAR_SKIES)</span></span></code></pre></div><h3 id="weather-partly-cloudy" tabindex="-1">WEATHER.PARTLY_CLOUDY <a class="header-anchor" href="#weather-partly-cloudy" aria-label="Permalink to &quot;WEATHER.PARTLY_CLOUDY&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PARTLY_CLOUDY)</span></span></code></pre></div><h3 id="weather-cloudy" tabindex="-1">WEATHER.CLOUDY <a class="header-anchor" href="#weather-cloudy" aria-label="Permalink to &quot;WEATHER.CLOUDY&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">CLOUDY)</span></span></code></pre></div><h3 id="weather-overcast" tabindex="-1">WEATHER.OVERCAST <a class="header-anchor" href="#weather-overcast" aria-label="Permalink to &quot;WEATHER.OVERCAST&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">OVERCAST)</span></span></code></pre></div><h3 id="weather-foggy" tabindex="-1">WEATHER.FOGGY <a class="header-anchor" href="#weather-foggy" aria-label="Permalink to &quot;WEATHER.FOGGY&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">FOGGY)</span></span></code></pre></div><h3 id="weather-light-rain" tabindex="-1">WEATHER.LIGHT_RAIN <a class="header-anchor" href="#weather-light-rain" aria-label="Permalink to &quot;WEATHER.LIGHT_RAIN&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LIGHT_RAIN)</span></span></code></pre></div><h3 id="weather-rain" tabindex="-1">WEATHER.RAIN <a class="header-anchor" href="#weather-rain" aria-label="Permalink to &quot;WEATHER.RAIN&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">RAIN)</span></span></code></pre></div><h3 id="weather-thunderstorm" tabindex="-1">WEATHER.THUNDERSTORM <a class="header-anchor" href="#weather-thunderstorm" aria-label="Permalink to &quot;WEATHER.THUNDERSTORM&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">THUNDERSTORM)</span></span></code></pre></div><h3 id="weather-sand-dust" tabindex="-1">WEATHER.SAND_DUST <a class="header-anchor" href="#weather-sand-dust" aria-label="Permalink to &quot;WEATHER.SAND_DUST&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SAND_DUST)</span></span></code></pre></div><h3 id="weather-sandstorm" tabindex="-1">WEATHER.SANDSTORM <a class="header-anchor" href="#weather-sandstorm" aria-label="Permalink to &quot;WEATHER.SANDSTORM&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SANDSTORM)</span></span></code></pre></div><h3 id="weather-light-snow" tabindex="-1">WEATHER.LIGHT_SNOW <a class="header-anchor" href="#weather-light-snow" aria-label="Permalink to &quot;WEATHER.LIGHT_SNOW&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">LIGHT_SNOW)</span></span></code></pre></div><h3 id="weather-snow" tabindex="-1">WEATHER.SNOW <a class="header-anchor" href="#weather-snow" aria-label="Permalink to &quot;WEATHER.SNOW&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">SNOW)</span></span></code></pre></div><h3 id="weather-blizzard" tabindex="-1">WEATHER.BLIZZARD <a class="header-anchor" href="#weather-blizzard" aria-label="Permalink to &quot;WEATHER.BLIZZARD&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> controllerInfo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">await</span><span style="color:#A6ACCD;"> controller</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setWeatherType</span><span style="color:#A6ACCD;">(KAPI_CONST</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">WEATHER</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">BLIZZARD)</span></span></code></pre></div>', 123);
const _hoisted_124 = [
  _hoisted_1
];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", null, _hoisted_124);
}
const kapiConst = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  __pageData,
  kapiConst as default
};
